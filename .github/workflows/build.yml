name: SonarQube
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Ensure directories exist
        run: |
          mkdir -p .sonar\cache
          mkdir -p .sonar\scanner
          mkdir -p .sonar\coverage
      
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: .\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          dotnet tool install dotnet-sonarscanner --tool-path .\.sonar\scanner
      
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"grupo-tech-challenge_grupo-tech-challenge-v2" /o:"grupo-tech-challenge" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=coverage.xml /d:sonar.scanner.scanAll=false
          dotnet build --no-incremental
          dotnet test /p:CollectCoverage=true
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Test
        run: dotnet test --collect "Code Coverage;Format=xml" --no-build --verbosity normal
      
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
        with:
            reports: './**/TestResults/**/*.xml'
            targetdir: '${{ github.workspace }}/coveragereport'
            reporttypes: 'MarkdownSummaryGithub'
      
      - name: Upload raw coverage report artifact
        uses: actions/upload-artifact@v3
        with:
            name: RawCoverageReport
            path: ./**/TestResults/**/*.xml
