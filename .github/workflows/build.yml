---
name: Code Quality
on:
  pull_request:
    branches: ["master"]
jobs:
  build:
    name: Sonarqube
    runs-on: windows-latest
    env:
      JWT_KEY: ${{ secrets.JWT_KEY }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Obtendo o cÃ³digo do Projeto
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Obtendo o Sonarqube Cloud
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache SonarQube Cloud Scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      
      - name: Instalando SonarQube Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      
      - name: Analise do codigo
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: >
          .\.sonar\scanner\dotnet-sonarscanner begin
          /k:"grupo-tech-challenge_grupo-tech-challenge-v2"
          /o:"grupo-tech-challenge" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"

          dotnet build

          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
